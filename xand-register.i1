;-----------------------------------------------------------------------------
; xand-ucode
; Copyright (c) 2015, Joshua Scoggins
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
; WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR 
; ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
; ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;-----------------------------------------------------------------------------
; xand microcode - using registers for memory instead of the data section
;-----------------------------------------------------------------------------
; go get github.com/DrItanium/cores
; go install github.com/DrItanium/cores/cmd/rlasm
; go install github.com/DrItanium/cores/cmd/rlsim
; rlasm -target=iris1 -input=xand-register.i1 -output=xand-register.ucode 
; rlsim -target=iris1 -output=xand-register.ucode
; 
; Watch nothing happen and then terminate
;-----------------------------------------------------------------------------
; System reserved registers (used by the processor internally)
;-----------------------------------------------------------------------------
.alias false = r0
.alias true = r1
.alias zero = r0
.alias one = r1
.alias micro-ip = r2
.alias micro-sp = r3
.alias micro-pred = r4
.alias micro-cp = r5

;-----------------------------------------------------------------------------
; xand microcode internal registers
;-----------------------------------------------------------------------------
.alias xop0 = r6                                ; first operand address 
.alias xop1 = r7                                ; second operand address 
.alias xop2 = r8                                ; third operand address
.alias a = r9                                   ; memory[xop0]
.alias b = r10                                  ; memory[xop1]
.alias tmp = r12                                ; temporary register
.alias chop-mask = r13                          ; 0xFF
.alias xand-exec-addr = r16                     ; address of xand-exec label
.alias terminate-addr = r17                     ; address of terminate label
.alias xip = r18                                ; xand instruction pointer
.alias max-signed = r19                         ; largest positive value (127)
.alias tmp1 = r20
.alias tmp2 = r21
.alias in0 = r22
.alias in1 = r23
.alias out = r24
;-----------------------------------------------------------------------------
; memory "cells"
;-----------------------------------------------------------------------------
.alias mem0 = r32
.alias mem1 = r33
.alias mem2 = r34
.alias mem3 = r35
.alias mem4 = r36
.alias mem5 = r37
.alias mem6 = r38
.alias mem7 = r39
.alias mem8 = r40
.alias mem9 = r41
.alias mem10 = r42
.alias mem11 = r43
.alias mem12 = r44
.alias mem13 = r45
.alias mem14 = r46
.alias mem15 = r47
.alias mem16 = r48
.alias mem17 = r49
.alias mem18 = r50
.alias mem19 = r51
.alias mem20 = r52
.alias mem21 = r53
.alias mem22 = r54
.alias mem23 = r55
.alias mem24 = r56
.alias mem25 = r57
.alias mem26 = r58
.alias mem27 = r59
.alias mem28 = r60
.alias mem29 = r61
.alias mem30 = r62
.alias mem31 = r63
.alias mem32 = r64
.alias mem33 = r65
.alias mem34 = r66
.alias mem35 = r67
.alias mem36 = r68
.alias mem37 = r69
.alias mem38 = r70
.alias mem39 = r71
.alias mem40 = r72
.alias mem41 = r73
.alias mem42 = r74
.alias mem43 = r75
.alias mem44 = r76
.alias mem45 = r77
.alias mem46 = r78
.alias mem47 = r79
.alias mem48 = r80
.alias mem49 = r81
.alias mem50 = r82
.alias mem51 = r83
.alias mem52 = r84
.alias mem53 = r85
.alias mem54 = r86
.alias mem55 = r87
.alias mem56 = r88
.alias mem57 = r89
.alias mem58 = r90
.alias mem59 = r91
.alias mem60 = r92
.alias mem61 = r93
.alias mem62 = r94
.alias mem63 = r95
.alias mem64 = r96
.alias mem65 = r97
.alias mem66 = r98
.alias mem67 = r99
.alias mem68 = r100
.alias mem69 = r101
.alias mem70 = r102
.alias mem71 = r103
.alias mem72 = r104
.alias mem73 = r105
.alias mem74 = r106
.alias mem75 = r107
.alias mem76 = r108
.alias mem77 = r109
.alias mem78 = r110
.alias mem79 = r111
.alias mem80 = r112
.alias mem81 = r113
.alias mem82 = r114
.alias mem83 = r115
.alias mem84 = r116
.alias mem85 = r117
.alias mem86 = r118
.alias mem87 = r119
.alias mem88 = r120
.alias mem89 = r121
.alias mem90 = r122
.alias mem91 = r123
.alias mem92 = r124
.alias mem93 = r125
.alias mem94 = r126
.alias mem95 = r127
.alias mem96 = r128
.alias mem97 = r129
.alias mem98 = r130
.alias mem99 = r131
.alias mem100 = r132
.alias mem101 = r133
.alias mem102 = r134
.alias mem103 = r135
.alias mem104 = r136
.alias mem105 = r137
.alias mem106 = r138
.alias mem107 = r139
.alias mem108 = r140
.alias mem109 = r141
.alias mem110 = r142
.alias mem111 = r143
.alias mem112 = r144
.alias mem113 = r145
.alias mem114 = r146
.alias mem115 = r147
.alias mem116 = r148
.alias mem117 = r149
.alias mem118 = r150
.alias mem119 = r151
.alias mem120 = r152
.alias mem121 = r153
.alias mem122 = r154
.alias mem123 = r155
.alias mem124 = r156
.alias mem125 = r157
.alias mem126 = r158
.alias mem127 = r159
.alias mem128 = r160 ; special register for overflow if you jump to mem126 or mem127
.alias mem129 = r161 ; for regularity
;-----------------------------------------------------------------------------
; xand code loop
; Some things to note:
;   1) iris1 uses unsigned values everywhere (we must handle signed values in the microcode)
;   2) registers are 16-bits wide (1 word)
;   3) the data section is not byte oriented but word oriented (each address refers to a 16-bit value)
;-----------------------------------------------------------------------------
.code
.org #x0
init:
    move ?xip = ?zero                           ; zero out the xand ip
    set ?chop-mask = #x00FF                     ; chop mask of 0x00FF
    move ?mem128 = ?chop-mask                   ; setup terminator code body
    move ?mem129 = ?chop-mask                   ; setup terminator code body
    set ?max-signed = #127                      ; largest positive value (grrr signed bytes)
    set ?xand-exec-addr = xand_exec             ; address of xand-exec
    set ?terminate-addr = terminate             ; address of terminate register
loop:                                           ; program loop
    gt ?micro-pred = ?xip, ?max-signed          ; is the xand-ip > than max-signed?
    call if ?micro-pred then ?terminate-addr else ?xand-exec-addr 
    branch loop                                 ; keep looping

;-----------------------------------------------------------------------------
; The decode and potentially terminate phase
;-----------------------------------------------------------------------------
xand_exec:
    call next_instruction
;-----------------------------------------------------------------------------
; Now the actual meat of the operation
; memory[a] -= memory[b]
; ip = if memory[a] <= 0 then c else ip + 3
;-----------------------------------------------------------------------------
    call load_xop1
    not ?b = ?out                               ; invert the bits
    incr ?b = ?b                                ; add one
                                                ; By doing this we can always use an add operation 
    call load_xop0
    add ?a = ?out, ?b                           ; ?a += ?b
                                                ; exploit the fact that we are using 16-bit registers
                                                ; to handle the bit overflow that would occur in normal two's 
                                                ; complement addition
    and ?a = ?a, ?chop-mask                     ; We actually don't care about the upper 8 bits so mask it
    call store_xop0
    ne ?micro-pred = ?a, ?zero                  ; a <= 0 but in our case it has to be a != 0 && a <= 127
    le ?micro-pred & ?a, ?max-signed            ; 
    branch add-three if ?micro-pred             ; don't store c in xip if conditions weren't met
    move ?xip = ?xop2                           ; move c to ip
    return
add-three:
    add ?xip = ?xip, #3                         ; ip += 3
    return                                      ; get the hell out of here

terminate:
    system #0, ?true, ?true                     ; get out of here !

;-----------------------------------------------------------------------------
; Instruction Pointer threaded argument checks
;-----------------------------------------------------------------------------
check-xop0:
    move ?tmp = ?xop0
    branch check-input
check-xop1:
    move ?tmp = ?xop1
    branch check-input
check-xop2:
    move ?tmp = ?xop2
check-input:
    gt ?micro-pred = ?tmp, ?max-signed
    branch terminate if ?micro-pred
    return
load_xop0:
    move ?in0 = ?xop0
    branch vload
load_xop1:
    move ?in0 = ?xop1                         ; use xop1 as offset for some base
vload:
    set ?tmp = load_jump_table                ; Load base offset
    branch indirect_memory_op
store_xop0:
    move ?in0 = ?xop0                         ; store the offset
    move ?in1 = ?a                            ; value to store
vstore:
    set ?tmp = store_jump_table              ; exploit fallthrough
    branch indirect_memory_op
next_instruction:
    set ?tmp = next_instruction_jump_table 
    move ?in0 = ?xip
indirect_memory_op:
    add ?tmp1 = ?tmp, ?in0                    ; get the real offset
    load ?tmp2 = ?tmp1, microcode              ; load address from microcode
    branch ?tmp2                               ; branch to the target address so that we can return back to what called this function
                                               ; at this point it will be impossible for any of these operations to be out of range!

;-----------------------------------------------------------------------------
; Autogenerated jump tables
;-----------------------------------------------------------------------------
.code
next_instruction_case0:
	move ?xop0 = ?mem0
	call check-xop0
	move ?xop1 = ?mem1
	call check-xop1
	move ?xop2 = ?mem2
	call check-xop2
	return
next_instruction_case1:
	move ?xop0 = ?mem1
	call check-xop0
	move ?xop1 = ?mem2
	call check-xop1
	move ?xop2 = ?mem3
	call check-xop2
	return
next_instruction_case2:
	move ?xop0 = ?mem2
	call check-xop0
	move ?xop1 = ?mem3
	call check-xop1
	move ?xop2 = ?mem4
	call check-xop2
	return
next_instruction_case3:
	move ?xop0 = ?mem3
	call check-xop0
	move ?xop1 = ?mem4
	call check-xop1
	move ?xop2 = ?mem5
	call check-xop2
	return
next_instruction_case4:
	move ?xop0 = ?mem4
	call check-xop0
	move ?xop1 = ?mem5
	call check-xop1
	move ?xop2 = ?mem6
	call check-xop2
	return
next_instruction_case5:
	move ?xop0 = ?mem5
	call check-xop0
	move ?xop1 = ?mem6
	call check-xop1
	move ?xop2 = ?mem7
	call check-xop2
	return
next_instruction_case6:
	move ?xop0 = ?mem6
	call check-xop0
	move ?xop1 = ?mem7
	call check-xop1
	move ?xop2 = ?mem8
	call check-xop2
	return
next_instruction_case7:
	move ?xop0 = ?mem7
	call check-xop0
	move ?xop1 = ?mem8
	call check-xop1
	move ?xop2 = ?mem9
	call check-xop2
	return
next_instruction_case8:
	move ?xop0 = ?mem8
	call check-xop0
	move ?xop1 = ?mem9
	call check-xop1
	move ?xop2 = ?mem10
	call check-xop2
	return
next_instruction_case9:
	move ?xop0 = ?mem9
	call check-xop0
	move ?xop1 = ?mem10
	call check-xop1
	move ?xop2 = ?mem11
	call check-xop2
	return
next_instruction_case10:
	move ?xop0 = ?mem10
	call check-xop0
	move ?xop1 = ?mem11
	call check-xop1
	move ?xop2 = ?mem12
	call check-xop2
	return
next_instruction_case11:
	move ?xop0 = ?mem11
	call check-xop0
	move ?xop1 = ?mem12
	call check-xop1
	move ?xop2 = ?mem13
	call check-xop2
	return
next_instruction_case12:
	move ?xop0 = ?mem12
	call check-xop0
	move ?xop1 = ?mem13
	call check-xop1
	move ?xop2 = ?mem14
	call check-xop2
	return
next_instruction_case13:
	move ?xop0 = ?mem13
	call check-xop0
	move ?xop1 = ?mem14
	call check-xop1
	move ?xop2 = ?mem15
	call check-xop2
	return
next_instruction_case14:
	move ?xop0 = ?mem14
	call check-xop0
	move ?xop1 = ?mem15
	call check-xop1
	move ?xop2 = ?mem16
	call check-xop2
	return
next_instruction_case15:
	move ?xop0 = ?mem15
	call check-xop0
	move ?xop1 = ?mem16
	call check-xop1
	move ?xop2 = ?mem17
	call check-xop2
	return
next_instruction_case16:
	move ?xop0 = ?mem16
	call check-xop0
	move ?xop1 = ?mem17
	call check-xop1
	move ?xop2 = ?mem18
	call check-xop2
	return
next_instruction_case17:
	move ?xop0 = ?mem17
	call check-xop0
	move ?xop1 = ?mem18
	call check-xop1
	move ?xop2 = ?mem19
	call check-xop2
	return
next_instruction_case18:
	move ?xop0 = ?mem18
	call check-xop0
	move ?xop1 = ?mem19
	call check-xop1
	move ?xop2 = ?mem20
	call check-xop2
	return
next_instruction_case19:
	move ?xop0 = ?mem19
	call check-xop0
	move ?xop1 = ?mem20
	call check-xop1
	move ?xop2 = ?mem21
	call check-xop2
	return
next_instruction_case20:
	move ?xop0 = ?mem20
	call check-xop0
	move ?xop1 = ?mem21
	call check-xop1
	move ?xop2 = ?mem22
	call check-xop2
	return
next_instruction_case21:
	move ?xop0 = ?mem21
	call check-xop0
	move ?xop1 = ?mem22
	call check-xop1
	move ?xop2 = ?mem23
	call check-xop2
	return
next_instruction_case22:
	move ?xop0 = ?mem22
	call check-xop0
	move ?xop1 = ?mem23
	call check-xop1
	move ?xop2 = ?mem24
	call check-xop2
	return
next_instruction_case23:
	move ?xop0 = ?mem23
	call check-xop0
	move ?xop1 = ?mem24
	call check-xop1
	move ?xop2 = ?mem25
	call check-xop2
	return
next_instruction_case24:
	move ?xop0 = ?mem24
	call check-xop0
	move ?xop1 = ?mem25
	call check-xop1
	move ?xop2 = ?mem26
	call check-xop2
	return
next_instruction_case25:
	move ?xop0 = ?mem25
	call check-xop0
	move ?xop1 = ?mem26
	call check-xop1
	move ?xop2 = ?mem27
	call check-xop2
	return
next_instruction_case26:
	move ?xop0 = ?mem26
	call check-xop0
	move ?xop1 = ?mem27
	call check-xop1
	move ?xop2 = ?mem28
	call check-xop2
	return
next_instruction_case27:
	move ?xop0 = ?mem27
	call check-xop0
	move ?xop1 = ?mem28
	call check-xop1
	move ?xop2 = ?mem29
	call check-xop2
	return
next_instruction_case28:
	move ?xop0 = ?mem28
	call check-xop0
	move ?xop1 = ?mem29
	call check-xop1
	move ?xop2 = ?mem30
	call check-xop2
	return
next_instruction_case29:
	move ?xop0 = ?mem29
	call check-xop0
	move ?xop1 = ?mem30
	call check-xop1
	move ?xop2 = ?mem31
	call check-xop2
	return
next_instruction_case30:
	move ?xop0 = ?mem30
	call check-xop0
	move ?xop1 = ?mem31
	call check-xop1
	move ?xop2 = ?mem32
	call check-xop2
	return
next_instruction_case31:
	move ?xop0 = ?mem31
	call check-xop0
	move ?xop1 = ?mem32
	call check-xop1
	move ?xop2 = ?mem33
	call check-xop2
	return
next_instruction_case32:
	move ?xop0 = ?mem32
	call check-xop0
	move ?xop1 = ?mem33
	call check-xop1
	move ?xop2 = ?mem34
	call check-xop2
	return
next_instruction_case33:
	move ?xop0 = ?mem33
	call check-xop0
	move ?xop1 = ?mem34
	call check-xop1
	move ?xop2 = ?mem35
	call check-xop2
	return
next_instruction_case34:
	move ?xop0 = ?mem34
	call check-xop0
	move ?xop1 = ?mem35
	call check-xop1
	move ?xop2 = ?mem36
	call check-xop2
	return
next_instruction_case35:
	move ?xop0 = ?mem35
	call check-xop0
	move ?xop1 = ?mem36
	call check-xop1
	move ?xop2 = ?mem37
	call check-xop2
	return
next_instruction_case36:
	move ?xop0 = ?mem36
	call check-xop0
	move ?xop1 = ?mem37
	call check-xop1
	move ?xop2 = ?mem38
	call check-xop2
	return
next_instruction_case37:
	move ?xop0 = ?mem37
	call check-xop0
	move ?xop1 = ?mem38
	call check-xop1
	move ?xop2 = ?mem39
	call check-xop2
	return
next_instruction_case38:
	move ?xop0 = ?mem38
	call check-xop0
	move ?xop1 = ?mem39
	call check-xop1
	move ?xop2 = ?mem40
	call check-xop2
	return
next_instruction_case39:
	move ?xop0 = ?mem39
	call check-xop0
	move ?xop1 = ?mem40
	call check-xop1
	move ?xop2 = ?mem41
	call check-xop2
	return
next_instruction_case40:
	move ?xop0 = ?mem40
	call check-xop0
	move ?xop1 = ?mem41
	call check-xop1
	move ?xop2 = ?mem42
	call check-xop2
	return
next_instruction_case41:
	move ?xop0 = ?mem41
	call check-xop0
	move ?xop1 = ?mem42
	call check-xop1
	move ?xop2 = ?mem43
	call check-xop2
	return
next_instruction_case42:
	move ?xop0 = ?mem42
	call check-xop0
	move ?xop1 = ?mem43
	call check-xop1
	move ?xop2 = ?mem44
	call check-xop2
	return
next_instruction_case43:
	move ?xop0 = ?mem43
	call check-xop0
	move ?xop1 = ?mem44
	call check-xop1
	move ?xop2 = ?mem45
	call check-xop2
	return
next_instruction_case44:
	move ?xop0 = ?mem44
	call check-xop0
	move ?xop1 = ?mem45
	call check-xop1
	move ?xop2 = ?mem46
	call check-xop2
	return
next_instruction_case45:
	move ?xop0 = ?mem45
	call check-xop0
	move ?xop1 = ?mem46
	call check-xop1
	move ?xop2 = ?mem47
	call check-xop2
	return
next_instruction_case46:
	move ?xop0 = ?mem46
	call check-xop0
	move ?xop1 = ?mem47
	call check-xop1
	move ?xop2 = ?mem48
	call check-xop2
	return
next_instruction_case47:
	move ?xop0 = ?mem47
	call check-xop0
	move ?xop1 = ?mem48
	call check-xop1
	move ?xop2 = ?mem49
	call check-xop2
	return
next_instruction_case48:
	move ?xop0 = ?mem48
	call check-xop0
	move ?xop1 = ?mem49
	call check-xop1
	move ?xop2 = ?mem50
	call check-xop2
	return
next_instruction_case49:
	move ?xop0 = ?mem49
	call check-xop0
	move ?xop1 = ?mem50
	call check-xop1
	move ?xop2 = ?mem51
	call check-xop2
	return
next_instruction_case50:
	move ?xop0 = ?mem50
	call check-xop0
	move ?xop1 = ?mem51
	call check-xop1
	move ?xop2 = ?mem52
	call check-xop2
	return
next_instruction_case51:
	move ?xop0 = ?mem51
	call check-xop0
	move ?xop1 = ?mem52
	call check-xop1
	move ?xop2 = ?mem53
	call check-xop2
	return
next_instruction_case52:
	move ?xop0 = ?mem52
	call check-xop0
	move ?xop1 = ?mem53
	call check-xop1
	move ?xop2 = ?mem54
	call check-xop2
	return
next_instruction_case53:
	move ?xop0 = ?mem53
	call check-xop0
	move ?xop1 = ?mem54
	call check-xop1
	move ?xop2 = ?mem55
	call check-xop2
	return
next_instruction_case54:
	move ?xop0 = ?mem54
	call check-xop0
	move ?xop1 = ?mem55
	call check-xop1
	move ?xop2 = ?mem56
	call check-xop2
	return
next_instruction_case55:
	move ?xop0 = ?mem55
	call check-xop0
	move ?xop1 = ?mem56
	call check-xop1
	move ?xop2 = ?mem57
	call check-xop2
	return
next_instruction_case56:
	move ?xop0 = ?mem56
	call check-xop0
	move ?xop1 = ?mem57
	call check-xop1
	move ?xop2 = ?mem58
	call check-xop2
	return
next_instruction_case57:
	move ?xop0 = ?mem57
	call check-xop0
	move ?xop1 = ?mem58
	call check-xop1
	move ?xop2 = ?mem59
	call check-xop2
	return
next_instruction_case58:
	move ?xop0 = ?mem58
	call check-xop0
	move ?xop1 = ?mem59
	call check-xop1
	move ?xop2 = ?mem60
	call check-xop2
	return
next_instruction_case59:
	move ?xop0 = ?mem59
	call check-xop0
	move ?xop1 = ?mem60
	call check-xop1
	move ?xop2 = ?mem61
	call check-xop2
	return
next_instruction_case60:
	move ?xop0 = ?mem60
	call check-xop0
	move ?xop1 = ?mem61
	call check-xop1
	move ?xop2 = ?mem62
	call check-xop2
	return
next_instruction_case61:
	move ?xop0 = ?mem61
	call check-xop0
	move ?xop1 = ?mem62
	call check-xop1
	move ?xop2 = ?mem63
	call check-xop2
	return
next_instruction_case62:
	move ?xop0 = ?mem62
	call check-xop0
	move ?xop1 = ?mem63
	call check-xop1
	move ?xop2 = ?mem64
	call check-xop2
	return
next_instruction_case63:
	move ?xop0 = ?mem63
	call check-xop0
	move ?xop1 = ?mem64
	call check-xop1
	move ?xop2 = ?mem65
	call check-xop2
	return
next_instruction_case64:
	move ?xop0 = ?mem64
	call check-xop0
	move ?xop1 = ?mem65
	call check-xop1
	move ?xop2 = ?mem66
	call check-xop2
	return
next_instruction_case65:
	move ?xop0 = ?mem65
	call check-xop0
	move ?xop1 = ?mem66
	call check-xop1
	move ?xop2 = ?mem67
	call check-xop2
	return
next_instruction_case66:
	move ?xop0 = ?mem66
	call check-xop0
	move ?xop1 = ?mem67
	call check-xop1
	move ?xop2 = ?mem68
	call check-xop2
	return
next_instruction_case67:
	move ?xop0 = ?mem67
	call check-xop0
	move ?xop1 = ?mem68
	call check-xop1
	move ?xop2 = ?mem69
	call check-xop2
	return
next_instruction_case68:
	move ?xop0 = ?mem68
	call check-xop0
	move ?xop1 = ?mem69
	call check-xop1
	move ?xop2 = ?mem70
	call check-xop2
	return
next_instruction_case69:
	move ?xop0 = ?mem69
	call check-xop0
	move ?xop1 = ?mem70
	call check-xop1
	move ?xop2 = ?mem71
	call check-xop2
	return
next_instruction_case70:
	move ?xop0 = ?mem70
	call check-xop0
	move ?xop1 = ?mem71
	call check-xop1
	move ?xop2 = ?mem72
	call check-xop2
	return
next_instruction_case71:
	move ?xop0 = ?mem71
	call check-xop0
	move ?xop1 = ?mem72
	call check-xop1
	move ?xop2 = ?mem73
	call check-xop2
	return
next_instruction_case72:
	move ?xop0 = ?mem72
	call check-xop0
	move ?xop1 = ?mem73
	call check-xop1
	move ?xop2 = ?mem74
	call check-xop2
	return
next_instruction_case73:
	move ?xop0 = ?mem73
	call check-xop0
	move ?xop1 = ?mem74
	call check-xop1
	move ?xop2 = ?mem75
	call check-xop2
	return
next_instruction_case74:
	move ?xop0 = ?mem74
	call check-xop0
	move ?xop1 = ?mem75
	call check-xop1
	move ?xop2 = ?mem76
	call check-xop2
	return
next_instruction_case75:
	move ?xop0 = ?mem75
	call check-xop0
	move ?xop1 = ?mem76
	call check-xop1
	move ?xop2 = ?mem77
	call check-xop2
	return
next_instruction_case76:
	move ?xop0 = ?mem76
	call check-xop0
	move ?xop1 = ?mem77
	call check-xop1
	move ?xop2 = ?mem78
	call check-xop2
	return
next_instruction_case77:
	move ?xop0 = ?mem77
	call check-xop0
	move ?xop1 = ?mem78
	call check-xop1
	move ?xop2 = ?mem79
	call check-xop2
	return
next_instruction_case78:
	move ?xop0 = ?mem78
	call check-xop0
	move ?xop1 = ?mem79
	call check-xop1
	move ?xop2 = ?mem80
	call check-xop2
	return
next_instruction_case79:
	move ?xop0 = ?mem79
	call check-xop0
	move ?xop1 = ?mem80
	call check-xop1
	move ?xop2 = ?mem81
	call check-xop2
	return
next_instruction_case80:
	move ?xop0 = ?mem80
	call check-xop0
	move ?xop1 = ?mem81
	call check-xop1
	move ?xop2 = ?mem82
	call check-xop2
	return
next_instruction_case81:
	move ?xop0 = ?mem81
	call check-xop0
	move ?xop1 = ?mem82
	call check-xop1
	move ?xop2 = ?mem83
	call check-xop2
	return
next_instruction_case82:
	move ?xop0 = ?mem82
	call check-xop0
	move ?xop1 = ?mem83
	call check-xop1
	move ?xop2 = ?mem84
	call check-xop2
	return
next_instruction_case83:
	move ?xop0 = ?mem83
	call check-xop0
	move ?xop1 = ?mem84
	call check-xop1
	move ?xop2 = ?mem85
	call check-xop2
	return
next_instruction_case84:
	move ?xop0 = ?mem84
	call check-xop0
	move ?xop1 = ?mem85
	call check-xop1
	move ?xop2 = ?mem86
	call check-xop2
	return
next_instruction_case85:
	move ?xop0 = ?mem85
	call check-xop0
	move ?xop1 = ?mem86
	call check-xop1
	move ?xop2 = ?mem87
	call check-xop2
	return
next_instruction_case86:
	move ?xop0 = ?mem86
	call check-xop0
	move ?xop1 = ?mem87
	call check-xop1
	move ?xop2 = ?mem88
	call check-xop2
	return
next_instruction_case87:
	move ?xop0 = ?mem87
	call check-xop0
	move ?xop1 = ?mem88
	call check-xop1
	move ?xop2 = ?mem89
	call check-xop2
	return
next_instruction_case88:
	move ?xop0 = ?mem88
	call check-xop0
	move ?xop1 = ?mem89
	call check-xop1
	move ?xop2 = ?mem90
	call check-xop2
	return
next_instruction_case89:
	move ?xop0 = ?mem89
	call check-xop0
	move ?xop1 = ?mem90
	call check-xop1
	move ?xop2 = ?mem91
	call check-xop2
	return
next_instruction_case90:
	move ?xop0 = ?mem90
	call check-xop0
	move ?xop1 = ?mem91
	call check-xop1
	move ?xop2 = ?mem92
	call check-xop2
	return
next_instruction_case91:
	move ?xop0 = ?mem91
	call check-xop0
	move ?xop1 = ?mem92
	call check-xop1
	move ?xop2 = ?mem93
	call check-xop2
	return
next_instruction_case92:
	move ?xop0 = ?mem92
	call check-xop0
	move ?xop1 = ?mem93
	call check-xop1
	move ?xop2 = ?mem94
	call check-xop2
	return
next_instruction_case93:
	move ?xop0 = ?mem93
	call check-xop0
	move ?xop1 = ?mem94
	call check-xop1
	move ?xop2 = ?mem95
	call check-xop2
	return
next_instruction_case94:
	move ?xop0 = ?mem94
	call check-xop0
	move ?xop1 = ?mem95
	call check-xop1
	move ?xop2 = ?mem96
	call check-xop2
	return
next_instruction_case95:
	move ?xop0 = ?mem95
	call check-xop0
	move ?xop1 = ?mem96
	call check-xop1
	move ?xop2 = ?mem97
	call check-xop2
	return
next_instruction_case96:
	move ?xop0 = ?mem96
	call check-xop0
	move ?xop1 = ?mem97
	call check-xop1
	move ?xop2 = ?mem98
	call check-xop2
	return
next_instruction_case97:
	move ?xop0 = ?mem97
	call check-xop0
	move ?xop1 = ?mem98
	call check-xop1
	move ?xop2 = ?mem99
	call check-xop2
	return
next_instruction_case98:
	move ?xop0 = ?mem98
	call check-xop0
	move ?xop1 = ?mem99
	call check-xop1
	move ?xop2 = ?mem100
	call check-xop2
	return
next_instruction_case99:
	move ?xop0 = ?mem99
	call check-xop0
	move ?xop1 = ?mem100
	call check-xop1
	move ?xop2 = ?mem101
	call check-xop2
	return
next_instruction_case100:
	move ?xop0 = ?mem100
	call check-xop0
	move ?xop1 = ?mem101
	call check-xop1
	move ?xop2 = ?mem102
	call check-xop2
	return
next_instruction_case101:
	move ?xop0 = ?mem101
	call check-xop0
	move ?xop1 = ?mem102
	call check-xop1
	move ?xop2 = ?mem103
	call check-xop2
	return
next_instruction_case102:
	move ?xop0 = ?mem102
	call check-xop0
	move ?xop1 = ?mem103
	call check-xop1
	move ?xop2 = ?mem104
	call check-xop2
	return
next_instruction_case103:
	move ?xop0 = ?mem103
	call check-xop0
	move ?xop1 = ?mem104
	call check-xop1
	move ?xop2 = ?mem105
	call check-xop2
	return
next_instruction_case104:
	move ?xop0 = ?mem104
	call check-xop0
	move ?xop1 = ?mem105
	call check-xop1
	move ?xop2 = ?mem106
	call check-xop2
	return
next_instruction_case105:
	move ?xop0 = ?mem105
	call check-xop0
	move ?xop1 = ?mem106
	call check-xop1
	move ?xop2 = ?mem107
	call check-xop2
	return
next_instruction_case106:
	move ?xop0 = ?mem106
	call check-xop0
	move ?xop1 = ?mem107
	call check-xop1
	move ?xop2 = ?mem108
	call check-xop2
	return
next_instruction_case107:
	move ?xop0 = ?mem107
	call check-xop0
	move ?xop1 = ?mem108
	call check-xop1
	move ?xop2 = ?mem109
	call check-xop2
	return
next_instruction_case108:
	move ?xop0 = ?mem108
	call check-xop0
	move ?xop1 = ?mem109
	call check-xop1
	move ?xop2 = ?mem110
	call check-xop2
	return
next_instruction_case109:
	move ?xop0 = ?mem109
	call check-xop0
	move ?xop1 = ?mem110
	call check-xop1
	move ?xop2 = ?mem111
	call check-xop2
	return
next_instruction_case110:
	move ?xop0 = ?mem110
	call check-xop0
	move ?xop1 = ?mem111
	call check-xop1
	move ?xop2 = ?mem112
	call check-xop2
	return
next_instruction_case111:
	move ?xop0 = ?mem111
	call check-xop0
	move ?xop1 = ?mem112
	call check-xop1
	move ?xop2 = ?mem113
	call check-xop2
	return
next_instruction_case112:
	move ?xop0 = ?mem112
	call check-xop0
	move ?xop1 = ?mem113
	call check-xop1
	move ?xop2 = ?mem114
	call check-xop2
	return
next_instruction_case113:
	move ?xop0 = ?mem113
	call check-xop0
	move ?xop1 = ?mem114
	call check-xop1
	move ?xop2 = ?mem115
	call check-xop2
	return
next_instruction_case114:
	move ?xop0 = ?mem114
	call check-xop0
	move ?xop1 = ?mem115
	call check-xop1
	move ?xop2 = ?mem116
	call check-xop2
	return
next_instruction_case115:
	move ?xop0 = ?mem115
	call check-xop0
	move ?xop1 = ?mem116
	call check-xop1
	move ?xop2 = ?mem117
	call check-xop2
	return
next_instruction_case116:
	move ?xop0 = ?mem116
	call check-xop0
	move ?xop1 = ?mem117
	call check-xop1
	move ?xop2 = ?mem118
	call check-xop2
	return
next_instruction_case117:
	move ?xop0 = ?mem117
	call check-xop0
	move ?xop1 = ?mem118
	call check-xop1
	move ?xop2 = ?mem119
	call check-xop2
	return
next_instruction_case118:
	move ?xop0 = ?mem118
	call check-xop0
	move ?xop1 = ?mem119
	call check-xop1
	move ?xop2 = ?mem120
	call check-xop2
	return
next_instruction_case119:
	move ?xop0 = ?mem119
	call check-xop0
	move ?xop1 = ?mem120
	call check-xop1
	move ?xop2 = ?mem121
	call check-xop2
	return
next_instruction_case120:
	move ?xop0 = ?mem120
	call check-xop0
	move ?xop1 = ?mem121
	call check-xop1
	move ?xop2 = ?mem122
	call check-xop2
	return
next_instruction_case121:
	move ?xop0 = ?mem121
	call check-xop0
	move ?xop1 = ?mem122
	call check-xop1
	move ?xop2 = ?mem123
	call check-xop2
	return
next_instruction_case122:
	move ?xop0 = ?mem122
	call check-xop0
	move ?xop1 = ?mem123
	call check-xop1
	move ?xop2 = ?mem124
	call check-xop2
	return
next_instruction_case123:
	move ?xop0 = ?mem123
	call check-xop0
	move ?xop1 = ?mem124
	call check-xop1
	move ?xop2 = ?mem125
	call check-xop2
	return
next_instruction_case124:
	move ?xop0 = ?mem124
	call check-xop0
	move ?xop1 = ?mem125
	call check-xop1
	move ?xop2 = ?mem126
	call check-xop2
	return
next_instruction_case125:
	move ?xop0 = ?mem125
	call check-xop0
	move ?xop1 = ?mem126
	call check-xop1
	move ?xop2 = ?mem127
	call check-xop2
	return
next_instruction_case126:
	move ?xop0 = ?mem126
	call check-xop0
	move ?xop1 = ?mem127
	call check-xop1
	move ?xop2 = ?mem128
	call check-xop2
	return
next_instruction_case127:
	move ?xop0 = ?mem127
	call check-xop0
	move ?xop1 = ?mem128
	call check-xop1
	move ?xop2 = ?mem129
	call check-xop2
	return
store_table_case0:
	move ?mem0 = ?in1
	return
store_table_case1:
	move ?mem1 = ?in1
	return
store_table_case2:
	move ?mem2 = ?in1
	return
store_table_case3:
	move ?mem3 = ?in1
	return
store_table_case4:
	move ?mem4 = ?in1
	return
store_table_case5:
	move ?mem5 = ?in1
	return
store_table_case6:
	move ?mem6 = ?in1
	return
store_table_case7:
	move ?mem7 = ?in1
	return
store_table_case8:
	move ?mem8 = ?in1
	return
store_table_case9:
	move ?mem9 = ?in1
	return
store_table_case10:
	move ?mem10 = ?in1
	return
store_table_case11:
	move ?mem11 = ?in1
	return
store_table_case12:
	move ?mem12 = ?in1
	return
store_table_case13:
	move ?mem13 = ?in1
	return
store_table_case14:
	move ?mem14 = ?in1
	return
store_table_case15:
	move ?mem15 = ?in1
	return
store_table_case16:
	move ?mem16 = ?in1
	return
store_table_case17:
	move ?mem17 = ?in1
	return
store_table_case18:
	move ?mem18 = ?in1
	return
store_table_case19:
	move ?mem19 = ?in1
	return
store_table_case20:
	move ?mem20 = ?in1
	return
store_table_case21:
	move ?mem21 = ?in1
	return
store_table_case22:
	move ?mem22 = ?in1
	return
store_table_case23:
	move ?mem23 = ?in1
	return
store_table_case24:
	move ?mem24 = ?in1
	return
store_table_case25:
	move ?mem25 = ?in1
	return
store_table_case26:
	move ?mem26 = ?in1
	return
store_table_case27:
	move ?mem27 = ?in1
	return
store_table_case28:
	move ?mem28 = ?in1
	return
store_table_case29:
	move ?mem29 = ?in1
	return
store_table_case30:
	move ?mem30 = ?in1
	return
store_table_case31:
	move ?mem31 = ?in1
	return
store_table_case32:
	move ?mem32 = ?in1
	return
store_table_case33:
	move ?mem33 = ?in1
	return
store_table_case34:
	move ?mem34 = ?in1
	return
store_table_case35:
	move ?mem35 = ?in1
	return
store_table_case36:
	move ?mem36 = ?in1
	return
store_table_case37:
	move ?mem37 = ?in1
	return
store_table_case38:
	move ?mem38 = ?in1
	return
store_table_case39:
	move ?mem39 = ?in1
	return
store_table_case40:
	move ?mem40 = ?in1
	return
store_table_case41:
	move ?mem41 = ?in1
	return
store_table_case42:
	move ?mem42 = ?in1
	return
store_table_case43:
	move ?mem43 = ?in1
	return
store_table_case44:
	move ?mem44 = ?in1
	return
store_table_case45:
	move ?mem45 = ?in1
	return
store_table_case46:
	move ?mem46 = ?in1
	return
store_table_case47:
	move ?mem47 = ?in1
	return
store_table_case48:
	move ?mem48 = ?in1
	return
store_table_case49:
	move ?mem49 = ?in1
	return
store_table_case50:
	move ?mem50 = ?in1
	return
store_table_case51:
	move ?mem51 = ?in1
	return
store_table_case52:
	move ?mem52 = ?in1
	return
store_table_case53:
	move ?mem53 = ?in1
	return
store_table_case54:
	move ?mem54 = ?in1
	return
store_table_case55:
	move ?mem55 = ?in1
	return
store_table_case56:
	move ?mem56 = ?in1
	return
store_table_case57:
	move ?mem57 = ?in1
	return
store_table_case58:
	move ?mem58 = ?in1
	return
store_table_case59:
	move ?mem59 = ?in1
	return
store_table_case60:
	move ?mem60 = ?in1
	return
store_table_case61:
	move ?mem61 = ?in1
	return
store_table_case62:
	move ?mem62 = ?in1
	return
store_table_case63:
	move ?mem63 = ?in1
	return
store_table_case64:
	move ?mem64 = ?in1
	return
store_table_case65:
	move ?mem65 = ?in1
	return
store_table_case66:
	move ?mem66 = ?in1
	return
store_table_case67:
	move ?mem67 = ?in1
	return
store_table_case68:
	move ?mem68 = ?in1
	return
store_table_case69:
	move ?mem69 = ?in1
	return
store_table_case70:
	move ?mem70 = ?in1
	return
store_table_case71:
	move ?mem71 = ?in1
	return
store_table_case72:
	move ?mem72 = ?in1
	return
store_table_case73:
	move ?mem73 = ?in1
	return
store_table_case74:
	move ?mem74 = ?in1
	return
store_table_case75:
	move ?mem75 = ?in1
	return
store_table_case76:
	move ?mem76 = ?in1
	return
store_table_case77:
	move ?mem77 = ?in1
	return
store_table_case78:
	move ?mem78 = ?in1
	return
store_table_case79:
	move ?mem79 = ?in1
	return
store_table_case80:
	move ?mem80 = ?in1
	return
store_table_case81:
	move ?mem81 = ?in1
	return
store_table_case82:
	move ?mem82 = ?in1
	return
store_table_case83:
	move ?mem83 = ?in1
	return
store_table_case84:
	move ?mem84 = ?in1
	return
store_table_case85:
	move ?mem85 = ?in1
	return
store_table_case86:
	move ?mem86 = ?in1
	return
store_table_case87:
	move ?mem87 = ?in1
	return
store_table_case88:
	move ?mem88 = ?in1
	return
store_table_case89:
	move ?mem89 = ?in1
	return
store_table_case90:
	move ?mem90 = ?in1
	return
store_table_case91:
	move ?mem91 = ?in1
	return
store_table_case92:
	move ?mem92 = ?in1
	return
store_table_case93:
	move ?mem93 = ?in1
	return
store_table_case94:
	move ?mem94 = ?in1
	return
store_table_case95:
	move ?mem95 = ?in1
	return
store_table_case96:
	move ?mem96 = ?in1
	return
store_table_case97:
	move ?mem97 = ?in1
	return
store_table_case98:
	move ?mem98 = ?in1
	return
store_table_case99:
	move ?mem99 = ?in1
	return
store_table_case100:
	move ?mem100 = ?in1
	return
store_table_case101:
	move ?mem101 = ?in1
	return
store_table_case102:
	move ?mem102 = ?in1
	return
store_table_case103:
	move ?mem103 = ?in1
	return
store_table_case104:
	move ?mem104 = ?in1
	return
store_table_case105:
	move ?mem105 = ?in1
	return
store_table_case106:
	move ?mem106 = ?in1
	return
store_table_case107:
	move ?mem107 = ?in1
	return
store_table_case108:
	move ?mem108 = ?in1
	return
store_table_case109:
	move ?mem109 = ?in1
	return
store_table_case110:
	move ?mem110 = ?in1
	return
store_table_case111:
	move ?mem111 = ?in1
	return
store_table_case112:
	move ?mem112 = ?in1
	return
store_table_case113:
	move ?mem113 = ?in1
	return
store_table_case114:
	move ?mem114 = ?in1
	return
store_table_case115:
	move ?mem115 = ?in1
	return
store_table_case116:
	move ?mem116 = ?in1
	return
store_table_case117:
	move ?mem117 = ?in1
	return
store_table_case118:
	move ?mem118 = ?in1
	return
store_table_case119:
	move ?mem119 = ?in1
	return
store_table_case120:
	move ?mem120 = ?in1
	return
store_table_case121:
	move ?mem121 = ?in1
	return
store_table_case122:
	move ?mem122 = ?in1
	return
store_table_case123:
	move ?mem123 = ?in1
	return
store_table_case124:
	move ?mem124 = ?in1
	return
store_table_case125:
	move ?mem125 = ?in1
	return
store_table_case126:
	move ?mem126 = ?in1
	return
store_table_case127:
	move ?mem127 = ?in1
	return
load_table_case0:
	move ?out = ?mem0
	return
load_table_case1:
	move ?out = ?mem1
	return
load_table_case2:
	move ?out = ?mem2
	return
load_table_case3:
	move ?out = ?mem3
	return
load_table_case4:
	move ?out = ?mem4
	return
load_table_case5:
	move ?out = ?mem5
	return
load_table_case6:
	move ?out = ?mem6
	return
load_table_case7:
	move ?out = ?mem7
	return
load_table_case8:
	move ?out = ?mem8
	return
load_table_case9:
	move ?out = ?mem9
	return
load_table_case10:
	move ?out = ?mem10
	return
load_table_case11:
	move ?out = ?mem11
	return
load_table_case12:
	move ?out = ?mem12
	return
load_table_case13:
	move ?out = ?mem13
	return
load_table_case14:
	move ?out = ?mem14
	return
load_table_case15:
	move ?out = ?mem15
	return
load_table_case16:
	move ?out = ?mem16
	return
load_table_case17:
	move ?out = ?mem17
	return
load_table_case18:
	move ?out = ?mem18
	return
load_table_case19:
	move ?out = ?mem19
	return
load_table_case20:
	move ?out = ?mem20
	return
load_table_case21:
	move ?out = ?mem21
	return
load_table_case22:
	move ?out = ?mem22
	return
load_table_case23:
	move ?out = ?mem23
	return
load_table_case24:
	move ?out = ?mem24
	return
load_table_case25:
	move ?out = ?mem25
	return
load_table_case26:
	move ?out = ?mem26
	return
load_table_case27:
	move ?out = ?mem27
	return
load_table_case28:
	move ?out = ?mem28
	return
load_table_case29:
	move ?out = ?mem29
	return
load_table_case30:
	move ?out = ?mem30
	return
load_table_case31:
	move ?out = ?mem31
	return
load_table_case32:
	move ?out = ?mem32
	return
load_table_case33:
	move ?out = ?mem33
	return
load_table_case34:
	move ?out = ?mem34
	return
load_table_case35:
	move ?out = ?mem35
	return
load_table_case36:
	move ?out = ?mem36
	return
load_table_case37:
	move ?out = ?mem37
	return
load_table_case38:
	move ?out = ?mem38
	return
load_table_case39:
	move ?out = ?mem39
	return
load_table_case40:
	move ?out = ?mem40
	return
load_table_case41:
	move ?out = ?mem41
	return
load_table_case42:
	move ?out = ?mem42
	return
load_table_case43:
	move ?out = ?mem43
	return
load_table_case44:
	move ?out = ?mem44
	return
load_table_case45:
	move ?out = ?mem45
	return
load_table_case46:
	move ?out = ?mem46
	return
load_table_case47:
	move ?out = ?mem47
	return
load_table_case48:
	move ?out = ?mem48
	return
load_table_case49:
	move ?out = ?mem49
	return
load_table_case50:
	move ?out = ?mem50
	return
load_table_case51:
	move ?out = ?mem51
	return
load_table_case52:
	move ?out = ?mem52
	return
load_table_case53:
	move ?out = ?mem53
	return
load_table_case54:
	move ?out = ?mem54
	return
load_table_case55:
	move ?out = ?mem55
	return
load_table_case56:
	move ?out = ?mem56
	return
load_table_case57:
	move ?out = ?mem57
	return
load_table_case58:
	move ?out = ?mem58
	return
load_table_case59:
	move ?out = ?mem59
	return
load_table_case60:
	move ?out = ?mem60
	return
load_table_case61:
	move ?out = ?mem61
	return
load_table_case62:
	move ?out = ?mem62
	return
load_table_case63:
	move ?out = ?mem63
	return
load_table_case64:
	move ?out = ?mem64
	return
load_table_case65:
	move ?out = ?mem65
	return
load_table_case66:
	move ?out = ?mem66
	return
load_table_case67:
	move ?out = ?mem67
	return
load_table_case68:
	move ?out = ?mem68
	return
load_table_case69:
	move ?out = ?mem69
	return
load_table_case70:
	move ?out = ?mem70
	return
load_table_case71:
	move ?out = ?mem71
	return
load_table_case72:
	move ?out = ?mem72
	return
load_table_case73:
	move ?out = ?mem73
	return
load_table_case74:
	move ?out = ?mem74
	return
load_table_case75:
	move ?out = ?mem75
	return
load_table_case76:
	move ?out = ?mem76
	return
load_table_case77:
	move ?out = ?mem77
	return
load_table_case78:
	move ?out = ?mem78
	return
load_table_case79:
	move ?out = ?mem79
	return
load_table_case80:
	move ?out = ?mem80
	return
load_table_case81:
	move ?out = ?mem81
	return
load_table_case82:
	move ?out = ?mem82
	return
load_table_case83:
	move ?out = ?mem83
	return
load_table_case84:
	move ?out = ?mem84
	return
load_table_case85:
	move ?out = ?mem85
	return
load_table_case86:
	move ?out = ?mem86
	return
load_table_case87:
	move ?out = ?mem87
	return
load_table_case88:
	move ?out = ?mem88
	return
load_table_case89:
	move ?out = ?mem89
	return
load_table_case90:
	move ?out = ?mem90
	return
load_table_case91:
	move ?out = ?mem91
	return
load_table_case92:
	move ?out = ?mem92
	return
load_table_case93:
	move ?out = ?mem93
	return
load_table_case94:
	move ?out = ?mem94
	return
load_table_case95:
	move ?out = ?mem95
	return
load_table_case96:
	move ?out = ?mem96
	return
load_table_case97:
	move ?out = ?mem97
	return
load_table_case98:
	move ?out = ?mem98
	return
load_table_case99:
	move ?out = ?mem99
	return
load_table_case100:
	move ?out = ?mem100
	return
load_table_case101:
	move ?out = ?mem101
	return
load_table_case102:
	move ?out = ?mem102
	return
load_table_case103:
	move ?out = ?mem103
	return
load_table_case104:
	move ?out = ?mem104
	return
load_table_case105:
	move ?out = ?mem105
	return
load_table_case106:
	move ?out = ?mem106
	return
load_table_case107:
	move ?out = ?mem107
	return
load_table_case108:
	move ?out = ?mem108
	return
load_table_case109:
	move ?out = ?mem109
	return
load_table_case110:
	move ?out = ?mem110
	return
load_table_case111:
	move ?out = ?mem111
	return
load_table_case112:
	move ?out = ?mem112
	return
load_table_case113:
	move ?out = ?mem113
	return
load_table_case114:
	move ?out = ?mem114
	return
load_table_case115:
	move ?out = ?mem115
	return
load_table_case116:
	move ?out = ?mem116
	return
load_table_case117:
	move ?out = ?mem117
	return
load_table_case118:
	move ?out = ?mem118
	return
load_table_case119:
	move ?out = ?mem119
	return
load_table_case120:
	move ?out = ?mem120
	return
load_table_case121:
	move ?out = ?mem121
	return
load_table_case122:
	move ?out = ?mem122
	return
load_table_case123:
	move ?out = ?mem123
	return
load_table_case124:
	move ?out = ?mem124
	return
load_table_case125:
	move ?out = ?mem125
	return
load_table_case126:
	move ?out = ?mem126
	return
load_table_case127:
	move ?out = ?mem127
	return
.microcode
.org #x0
next_instruction_jump_table:
	.word next_instruction_case0:
	.word next_instruction_case1:
	.word next_instruction_case2:
	.word next_instruction_case3:
	.word next_instruction_case4:
	.word next_instruction_case5:
	.word next_instruction_case6:
	.word next_instruction_case7:
	.word next_instruction_case8:
	.word next_instruction_case9:
	.word next_instruction_case10:
	.word next_instruction_case11:
	.word next_instruction_case12:
	.word next_instruction_case13:
	.word next_instruction_case14:
	.word next_instruction_case15:
	.word next_instruction_case16:
	.word next_instruction_case17:
	.word next_instruction_case18:
	.word next_instruction_case19:
	.word next_instruction_case20:
	.word next_instruction_case21:
	.word next_instruction_case22:
	.word next_instruction_case23:
	.word next_instruction_case24:
	.word next_instruction_case25:
	.word next_instruction_case26:
	.word next_instruction_case27:
	.word next_instruction_case28:
	.word next_instruction_case29:
	.word next_instruction_case30:
	.word next_instruction_case31:
	.word next_instruction_case32:
	.word next_instruction_case33:
	.word next_instruction_case34:
	.word next_instruction_case35:
	.word next_instruction_case36:
	.word next_instruction_case37:
	.word next_instruction_case38:
	.word next_instruction_case39:
	.word next_instruction_case40:
	.word next_instruction_case41:
	.word next_instruction_case42:
	.word next_instruction_case43:
	.word next_instruction_case44:
	.word next_instruction_case45:
	.word next_instruction_case46:
	.word next_instruction_case47:
	.word next_instruction_case48:
	.word next_instruction_case49:
	.word next_instruction_case50:
	.word next_instruction_case51:
	.word next_instruction_case52:
	.word next_instruction_case53:
	.word next_instruction_case54:
	.word next_instruction_case55:
	.word next_instruction_case56:
	.word next_instruction_case57:
	.word next_instruction_case58:
	.word next_instruction_case59:
	.word next_instruction_case60:
	.word next_instruction_case61:
	.word next_instruction_case62:
	.word next_instruction_case63:
	.word next_instruction_case64:
	.word next_instruction_case65:
	.word next_instruction_case66:
	.word next_instruction_case67:
	.word next_instruction_case68:
	.word next_instruction_case69:
	.word next_instruction_case70:
	.word next_instruction_case71:
	.word next_instruction_case72:
	.word next_instruction_case73:
	.word next_instruction_case74:
	.word next_instruction_case75:
	.word next_instruction_case76:
	.word next_instruction_case77:
	.word next_instruction_case78:
	.word next_instruction_case79:
	.word next_instruction_case80:
	.word next_instruction_case81:
	.word next_instruction_case82:
	.word next_instruction_case83:
	.word next_instruction_case84:
	.word next_instruction_case85:
	.word next_instruction_case86:
	.word next_instruction_case87:
	.word next_instruction_case88:
	.word next_instruction_case89:
	.word next_instruction_case90:
	.word next_instruction_case91:
	.word next_instruction_case92:
	.word next_instruction_case93:
	.word next_instruction_case94:
	.word next_instruction_case95:
	.word next_instruction_case96:
	.word next_instruction_case97:
	.word next_instruction_case98:
	.word next_instruction_case99:
	.word next_instruction_case100:
	.word next_instruction_case101:
	.word next_instruction_case102:
	.word next_instruction_case103:
	.word next_instruction_case104:
	.word next_instruction_case105:
	.word next_instruction_case106:
	.word next_instruction_case107:
	.word next_instruction_case108:
	.word next_instruction_case109:
	.word next_instruction_case110:
	.word next_instruction_case111:
	.word next_instruction_case112:
	.word next_instruction_case113:
	.word next_instruction_case114:
	.word next_instruction_case115:
	.word next_instruction_case116:
	.word next_instruction_case117:
	.word next_instruction_case118:
	.word next_instruction_case119:
	.word next_instruction_case120:
	.word next_instruction_case121:
	.word next_instruction_case122:
	.word next_instruction_case123:
	.word next_instruction_case124:
	.word next_instruction_case125:
	.word next_instruction_case126:
	.word next_instruction_case127:
load_jump_table:
	.word load_table_case0:
	.word load_table_case1:
	.word load_table_case2:
	.word load_table_case3:
	.word load_table_case4:
	.word load_table_case5:
	.word load_table_case6:
	.word load_table_case7:
	.word load_table_case8:
	.word load_table_case9:
	.word load_table_case10:
	.word load_table_case11:
	.word load_table_case12:
	.word load_table_case13:
	.word load_table_case14:
	.word load_table_case15:
	.word load_table_case16:
	.word load_table_case17:
	.word load_table_case18:
	.word load_table_case19:
	.word load_table_case20:
	.word load_table_case21:
	.word load_table_case22:
	.word load_table_case23:
	.word load_table_case24:
	.word load_table_case25:
	.word load_table_case26:
	.word load_table_case27:
	.word load_table_case28:
	.word load_table_case29:
	.word load_table_case30:
	.word load_table_case31:
	.word load_table_case32:
	.word load_table_case33:
	.word load_table_case34:
	.word load_table_case35:
	.word load_table_case36:
	.word load_table_case37:
	.word load_table_case38:
	.word load_table_case39:
	.word load_table_case40:
	.word load_table_case41:
	.word load_table_case42:
	.word load_table_case43:
	.word load_table_case44:
	.word load_table_case45:
	.word load_table_case46:
	.word load_table_case47:
	.word load_table_case48:
	.word load_table_case49:
	.word load_table_case50:
	.word load_table_case51:
	.word load_table_case52:
	.word load_table_case53:
	.word load_table_case54:
	.word load_table_case55:
	.word load_table_case56:
	.word load_table_case57:
	.word load_table_case58:
	.word load_table_case59:
	.word load_table_case60:
	.word load_table_case61:
	.word load_table_case62:
	.word load_table_case63:
	.word load_table_case64:
	.word load_table_case65:
	.word load_table_case66:
	.word load_table_case67:
	.word load_table_case68:
	.word load_table_case69:
	.word load_table_case70:
	.word load_table_case71:
	.word load_table_case72:
	.word load_table_case73:
	.word load_table_case74:
	.word load_table_case75:
	.word load_table_case76:
	.word load_table_case77:
	.word load_table_case78:
	.word load_table_case79:
	.word load_table_case80:
	.word load_table_case81:
	.word load_table_case82:
	.word load_table_case83:
	.word load_table_case84:
	.word load_table_case85:
	.word load_table_case86:
	.word load_table_case87:
	.word load_table_case88:
	.word load_table_case89:
	.word load_table_case90:
	.word load_table_case91:
	.word load_table_case92:
	.word load_table_case93:
	.word load_table_case94:
	.word load_table_case95:
	.word load_table_case96:
	.word load_table_case97:
	.word load_table_case98:
	.word load_table_case99:
	.word load_table_case100:
	.word load_table_case101:
	.word load_table_case102:
	.word load_table_case103:
	.word load_table_case104:
	.word load_table_case105:
	.word load_table_case106:
	.word load_table_case107:
	.word load_table_case108:
	.word load_table_case109:
	.word load_table_case110:
	.word load_table_case111:
	.word load_table_case112:
	.word load_table_case113:
	.word load_table_case114:
	.word load_table_case115:
	.word load_table_case116:
	.word load_table_case117:
	.word load_table_case118:
	.word load_table_case119:
	.word load_table_case120:
	.word load_table_case121:
	.word load_table_case122:
	.word load_table_case123:
	.word load_table_case124:
	.word load_table_case125:
	.word load_table_case126:
	.word load_table_case127:
store_jump_table:
	.word store_table_case0:
	.word store_table_case1:
	.word store_table_case2:
	.word store_table_case3:
	.word store_table_case4:
	.word store_table_case5:
	.word store_table_case6:
	.word store_table_case7:
	.word store_table_case8:
	.word store_table_case9:
	.word store_table_case10:
	.word store_table_case11:
	.word store_table_case12:
	.word store_table_case13:
	.word store_table_case14:
	.word store_table_case15:
	.word store_table_case16:
	.word store_table_case17:
	.word store_table_case18:
	.word store_table_case19:
	.word store_table_case20:
	.word store_table_case21:
	.word store_table_case22:
	.word store_table_case23:
	.word store_table_case24:
	.word store_table_case25:
	.word store_table_case26:
	.word store_table_case27:
	.word store_table_case28:
	.word store_table_case29:
	.word store_table_case30:
	.word store_table_case31:
	.word store_table_case32:
	.word store_table_case33:
	.word store_table_case34:
	.word store_table_case35:
	.word store_table_case36:
	.word store_table_case37:
	.word store_table_case38:
	.word store_table_case39:
	.word store_table_case40:
	.word store_table_case41:
	.word store_table_case42:
	.word store_table_case43:
	.word store_table_case44:
	.word store_table_case45:
	.word store_table_case46:
	.word store_table_case47:
	.word store_table_case48:
	.word store_table_case49:
	.word store_table_case50:
	.word store_table_case51:
	.word store_table_case52:
	.word store_table_case53:
	.word store_table_case54:
	.word store_table_case55:
	.word store_table_case56:
	.word store_table_case57:
	.word store_table_case58:
	.word store_table_case59:
	.word store_table_case60:
	.word store_table_case61:
	.word store_table_case62:
	.word store_table_case63:
	.word store_table_case64:
	.word store_table_case65:
	.word store_table_case66:
	.word store_table_case67:
	.word store_table_case68:
	.word store_table_case69:
	.word store_table_case70:
	.word store_table_case71:
	.word store_table_case72:
	.word store_table_case73:
	.word store_table_case74:
	.word store_table_case75:
	.word store_table_case76:
	.word store_table_case77:
	.word store_table_case78:
	.word store_table_case79:
	.word store_table_case80:
	.word store_table_case81:
	.word store_table_case82:
	.word store_table_case83:
	.word store_table_case84:
	.word store_table_case85:
	.word store_table_case86:
	.word store_table_case87:
	.word store_table_case88:
	.word store_table_case89:
	.word store_table_case90:
	.word store_table_case91:
	.word store_table_case92:
	.word store_table_case93:
	.word store_table_case94:
	.word store_table_case95:
	.word store_table_case96:
	.word store_table_case97:
	.word store_table_case98:
	.word store_table_case99:
	.word store_table_case100:
	.word store_table_case101:
	.word store_table_case102:
	.word store_table_case103:
	.word store_table_case104:
	.word store_table_case105:
	.word store_table_case106:
	.word store_table_case107:
	.word store_table_case108:
	.word store_table_case109:
	.word store_table_case110:
	.word store_table_case111:
	.word store_table_case112:
	.word store_table_case113:
	.word store_table_case114:
	.word store_table_case115:
	.word store_table_case116:
	.word store_table_case117:
	.word store_table_case118:
	.word store_table_case119:
	.word store_table_case120:
	.word store_table_case121:
	.word store_table_case122:
	.word store_table_case123:
	.word store_table_case124:
	.word store_table_case125:
	.word store_table_case126:
	.word store_table_case127:





.data

.org #x0            ; ajvondrak's fib program converted (thanks lisp for helping :D)
xand_while_n_gt_2:
    .word xand_three:
    .word xand_n:
    .word xand_continue:
xand_exit:
    .word #xFF
xand_continue:
    .word xand_zero:
    .word xand_n:
    .word xand_gen1:
xand_gen1:
    .word xand_three:
    .word xand_zero:
    .word xand_gen2:
xand_gen2:
    .word xand_zero:
    .word xand_zero:
    .word xand_gen3:
xand_gen3:
xand_copy_prev_to_prev2:
    .word xand_prev2:
    .word xand_prev2:
    .word xand_gen4:
xand_gen4:
    .word xand_zero:
    .word xand_prev:
    .word xand_gen5:
xand_gen5:
    .word xand_prev2:
    .word xand_zero:
    .word xand_gen6:
xand_gen6:
    .word xand_zero:
    .word xand_zero:
    .word xand_gen7:
xand_gen7:
xand_copy_fib_to_prev:
    .word xand_prev:
    .word xand_prev:
    .word xand_gen8:
xand_gen8:
    .word xand_zero:
    .word xand_fib:
    .word xand_gen9:
xand_gen9:
    .word xand_prev:
    .word xand_zero:
    .word xand_gen10:
xand_gen10:
    .word xand_zero:
    .word xand_zero:
    .word xand_gen11:
xand_gen11:
xand_add_prev2_to_fib:
    .word xand_zero:
    .word xand_prev2:
    .word xand_gen12:
xand_gen12:
    .word xand_fib:
    .word xand_zero:
    .word xand_gen13:
xand_gen13:
    .word xand_zero:
    .word xand_zero:
    .word xand_gen14:
xand_gen14:
xand_loop:
    .word xand_n:
    .word xand_one:
    .word xand_gen15:
xand_gen15:
    .word xand_zero:
    .word xand_zero:
    .word xand_while_n_gt_2:
xand_zero:
    .word #0
xand_one:
    .word #1
xand_three:
    .word #3
xand_n:
    .word #10
xand_prev2:
    .word #0
xand_prev:
    .word #1
xand_fib:
    .word #1
